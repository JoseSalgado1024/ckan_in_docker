DHUB_USER="jsalgadowk"
CKAN_DI="ckan"
PG_DI="pg-ckan"
SOLR_DI="solr"
HOST_TO_BIND=""

# FONT COLORS & STYLE :D
R="\x1B[31m"
G="\x1B[29m"
GG="\x1B[32m"
B="\x1B[34m"
Y="\x1B[33m"
W="\x1B[37m"
BL="\x1B[30m"
V="\x1B[35m"
C="\x1B[36m"
BOLD=$(tput bold)
NORMAL=$(tput sgr0)

# Pull all containers [pg-ckan, ckan, solr]
docker_pull_all_containers(){
	printf "${C}╔════════════════════════════════════════ ${B}■${C} ${W}■${C} ${B}■${C} ╗\n";
	printf "║            ${W}DESCARGAR CONTENEDORES${C}             ║\n";
	printf "╚═══════════════════════════════════════════════╝${NORMAL}\n";
	echo $CKAN_DI $PG_DI $SOLR_DI | xargs -n 1 | while read img; do docker pull $DHUB_USER/$img:latest; done
}

# Delete all containers! (cause i think is fun..)
docker_containers_delete_all (){
	printf "${C}╔════════════════════════════════════════ ${B}■${C} ${W}■${C} ${B}■${C} ╗\n";
	printf "║               ${W}BYE BYE CONTAINERS${C}              ║\n";
	printf "╚═══════════════════════════════════════════════╝${NORMAL}\n";
	docker rm -f $(docker ps -a -q)
}

# Stop all your running docker containers
docker_stop_all (){
	printf "${C}╔════════════════════════════════════════ ${B}■${C} ${W}■${C} ${B}■${C} ╗\n";
	printf "║          ${W}STOP ALL ${BOLD}DOCKER${NORMAL}${W} CONTAINERS${C}           ║\n";
	printf "╚═══════════════════════════════════════════════╝${NORMAL}\n";
	docker stop -f $(docker ps -a -q)
}

# Bye Bye Docker images!
docker_imgs_delete_all (){
	printf "${C}╔════════════════════════════════════════ ${B}■${C} ${W}■${C} ${B}■${C} ╗\n";
	printf "║            ${W}BYE BYE ${BOLD}DOCKER ${NORMAL}${W}IMAGES${C}              ║\n";
	printf "╚═══════════════════════════════════════════════╝${NORMAL}\n";
	docker rmi -f $(docker images -q)
}

# EASY WAY TO INSTALL DCOKER (...cause i'm a rockstar \o/)
install_docker (){
	printf "${C}╔════════════════════════════════════════ ${B}■${C} ${W}■${C} ${B}■${C} ╗\n";
	printf "║               ${W}INSTALANDO ${BOLD}DOCKER${NORMAL}${C}               ║\n";
	printf "╚═══════════════════════════════════════════════╝${NORMAL}\n";
	printf "...y digamos ${BOLD}GRACIAS DOCKER${NORMAL} x tu script!. \nVer mas en: https://get.docker.com/"
	curl -sSL https://get.docker.com/ | sh
}	

start_ckan-docker (){
	printf "${C}╔════════════════════════════════════════ ${B}■${C} ${W}■${C} ${B}■${C} ╗\n";
	printf "║         ${W}INICIANDO PORTAL ${BOLD}CKAN-DOCKER${NORMAL}${C}          ║\n";
	printf "╚═══════════════════════════════════════════════╝${NORMAL}\n";
  	echo "$PG_DI $SOLR_DI" | xargs -n 1 | while read img; do docker run -d  --name $img $DHUB_USER/$img; done
  	docker run -d --link $PG_DI:db --link $SOLR_DI:solr -p 80:80  -p 8800:8800 --name $CKAN_DI $DHUB_USER/$CKAN_DI:latest

}


deploy_portal (){
	# Paso 1: por las dudas elimino los contenedores...
	clean_old_install
	# Paso 2: Descargo todos lo contenedores necesarios.
	docker_pull_all_containers
	# Paso 3: Run CKAN!
	start_ckan-docker 
}

print_ckan_status() {
	printf "\nCKAN STATUS:\n===========\n"
	printf "CKAN corriendo en: \n\t http://$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' ckan) [privado]\n\t http://$(get_ip) [publico]\n"
	printf "DPusher corriendo en: \t http://$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' ckan):8800\n"
	printf "PGCKAN corriendo en: \t postgres://$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' pg-ckan):5432\n"
	printf "SOLR corriendo en:  \t http://$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' solr):8983\n\n"
}

bcpvf (){
	# Crear capertas para volumenes
	mkdir -p $HOME/ckan_volumes/data $HOME/ckan_volumes/config $HOME/ckan_volumes/pgdata
}

get_ip(){
	echo $(ifconfig $(route | grep '^default' | grep -o '[^ ]*$') | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}')
}

bind_portal(){

	# Si no recibo un host, configuro el ip de la VM
	if [[ $# -eq 0 ]] ; 
		then
	    	HOST_TO_BIND=$(get_ip)
	else
			HOST_TO_BIND=$1
	fi 
	docker exec -it ckan service apache2 stop; 
	docker exec -it ckan service nginx stop; 
	docker exec -it ckan /usr/lib/ckan/default/bin/paster --plugin=ckan config-tool /etc/ckan/default/development.ini -e "ckan.datapusher.url = http://${HOST_TO_BIND}:8800" "ckan.site_url = http://${HOST_TO_BIND}"
	docker exec -it ckan service apache2 restart; 
	docker exec -it ckan service nginx restart;	
}

clean_old_install (){
	echo "Eliminando instalaciones previas si existen..."
	for i in $"$CKAN_DI $PG_DI $SOLR_DI"
	do
		staus=$(docker inspect --format="{{ .State.Status }}" $img 2> /dev/null)
		if [ -z "$staus" ];
			then
			echo "Eliminando version antigua de $i"
			do docker rm -f $i	
		fi
	done
	echo "continuando instalacion..."
}